{"name": "login", "status": "broken", "statusDetails": {"message": "httprunner.exceptions.EnvNotFound: USERNAME", "trace": "variable_name = 'USERNAME'\n\n    def get_os_environ(variable_name):\n        \"\"\" get value of environment variable.\n    \n        Args:\n            variable_name(str): variable name\n    \n        Returns:\n            value of environment variable.\n    \n        Raises:\n            exceptions.EnvNotFound: If environment variable not found.\n    \n        \"\"\"\n        try:\n>           return os.environ[variable_name]\n\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/utils.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = environ({'PATH': '/Users/yangzhiqi/HPtest/pytest/bin:/usr/local/bin:/usr/local/sbin:/Library/Frameworks/Python.framewo... 'HOME': '/Users/yangzhiqi', 'PYTEST_CURRENT_TEST': 'testcase/test_test.py::TestCaseLogin::test_start[param1] (call)'})\nkey = 'USERNAME'\n\n    def __getitem__(self, key):\n        try:\n            value = self._data[self.encodekey(key)]\n        except KeyError:\n            # raise KeyError with the original key value\n>           raise KeyError(key) from None\nE           KeyError: 'USERNAME'\n\n/usr/local/Cellar/python@3.9/3.9.7_1/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py:679: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_test.TestCaseLogin object at 0x112413df0>\nparam = {'number': 2, 'token_length': 32}\n\n    @pytest.mark.parametrize('param', Parameters({'number': [1, 2], 'token_length': [32]}))\n    def test_start(self, param):\n>       super().test_start(param)\n\ntestcase/test_test.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/runner.py:455: in test_start\n    return self.run_testcase(\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/runner.py:334: in run_testcase\n    self.__parse_config(self.__config)\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/runner.py:309: in __parse_config\n    config.variables = parse_variables_mapping(\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/parser.py:458: in parse_variables_mapping\n    parsed_value = parse_data(\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/parser.py:405: in parse_data\n    return parse_string(raw_data, variables_mapping, functions_mapping)\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/parser.py:340: in parse_string\n    func_eval_value = func(*parsed_args, **parsed_kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nvariable_name = 'USERNAME'\n\n    def get_os_environ(variable_name):\n        \"\"\" get value of environment variable.\n    \n        Args:\n            variable_name(str): variable name\n    \n        Returns:\n            value of environment variable.\n    \n        Raises:\n            exceptions.EnvNotFound: If environment variable not found.\n    \n        \"\"\"\n        try:\n            return os.environ[variable_name]\n        except KeyError:\n>           raise exceptions.EnvNotFound(variable_name)\nE           httprunner.exceptions.EnvNotFound: USERNAME\n\n../../HPtest/pytest/lib/python3.9/site-packages/httprunner/utils.py:60: EnvNotFound"}, "description": "TestCase ID: 32798d76-d2e5-4ce4-94a9-640e25159961", "parameters": [{"name": "param", "value": "{'number': 2, 'token_length': 32}"}], "start": 1645090639819, "stop": 1645090639826, "uuid": "ae4b7317-70b5-471e-af15-b19dd4e6eaf7", "historyId": "d95f82986e0942b830c84c93592714c2", "testCaseId": "d430c431bde6409c3ad347d613b04bec", "fullName": "testcase.test_test.TestCaseLogin#test_start", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_test"}, {"name": "subSuite", "value": "TestCaseLogin"}, {"name": "host", "value": "YZQ.local"}, {"name": "thread", "value": "81307-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_test"}]}